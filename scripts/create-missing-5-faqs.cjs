#!/usr/bin/env node
/**
 * Crear 5 FAQs cr√≠ticas para resolver fallas identificadas
 */

require('dotenv').config();
const { createClient } = require('@supabase/supabase-js');
const { v4: uuidv4 } = require('uuid');

const supabase = createClient(process.env.SUPABASE_URL, process.env.SUPABASE_SERVICE_KEY);
const APEX_FIRM_ID = '854bf730-8420-4297-86f8-3c4a972edcf2';

const criticalFAQs = [
  {
    id: 'COSTOS_PLATAFORMA',
    question: '¬øHay costos adicionales por plataformas o data feed?',
    answer_md: `**No hay costos adicionales** para la mayor√≠a de plataformas y data:

üìä **Plataformas incluidas sin costo**:
- NinjaTrader: Gratis con tu cuenta APEX
- Tradovate: Incluido (plan b√°sico)
- Rithmic: Incluido para cuentas PA
- TradingView: Requiere suscripci√≥n propia

üì° **Data feed**:
- CME data feed: **Incluido gratis**
- Sin cargos mensuales adicionales
- Tiempo real para futuros

üí° **Nota**: Solo pagas la suscripci√≥n mensual de APEX ($165-$210 seg√∫n tama√±o).`,
    answer_short_md: 'NinjaTrader y data feed CME est√°n **incluidos gratis**. Solo pagas la mensualidad de APEX.',
    aliases: ['ninjatrader costo', 'data feed', 'pagar extra plataforma', 'costos adicionales', 'feed gratis', 'cme data']
  },
  {
    id: 'BLACKLIST_ESTRATEGIAS',
    question: '¬øExiste una blacklist de estrategias prohibidas?',
    answer_md: `S√≠, APEX tiene **reglas estrictas** sobre estrategias prohibidas:

üö´ **Completamente prohibidas**:
- HFT malicioso (>200 trades/d√≠a consistentemente)
- Tick scalping excesivo
- Explotar gaps de datos
- Manipulaci√≥n de mercado
- Trading durante mantenimiento de brokers
- Uso de m√∫ltiples cuentas coordinadas

‚úÖ **Permitido**:
- Scalping normal (<200 trades/d√≠a)
- Day trading est√°ndar
- Swing trading
- Uso de EAs/robots honestos
- Cualquier estrategia leg√≠tima de mercado

‚ö†Ô∏è Violar estas reglas resulta en **p√©rdida inmediata de cuenta sin reembolso**.`,
    answer_short_md: 'Prohibido: HFT excesivo (>200 trades/d√≠a), tick scalping, exploits. Permitido: scalping normal, day trading, swing.',
    aliases: ['blacklist', 'estrategias prohibidas', 'que no puedo hacer', 'reglas prohibidas', 'banned strategies']
  },
  {
    id: 'CAMBIO_ESTRATEGIA', 
    question: '¬øPuedo cambiar mi estrategia despu√©s de empezar?',
    answer_md: `‚úÖ **S√≠, puedes cambiar tu estrategia** en cualquier momento:

üîÑ **Durante la evaluaci√≥n**:
- Cambio libre de estrategia
- No hay restricciones
- Puedes probar diferentes enfoques
- Solo respeta las reglas generales (drawdown, etc.)

üìà **En cuenta PA (funded)**:
- Igual flexibilidad total
- Puedes adaptar tu trading al mercado
- Cambiar de scalping a swing o viceversa
- Sin notificaci√≥n requerida

üí° **Recomendaci√≥n**: Mant√©n consistencia en tu gesti√≥n de riesgo aunque cambies de estrategia.`,
    answer_short_md: '‚úÖ S√≠, puedes cambiar tu estrategia cuando quieras, tanto en evaluaci√≥n como en cuenta PA.',
    aliases: ['cambiar estrategia', 'modificar trading', 'nueva estrategia', 'cambio de plan', 'estrategia diferente']
  },
  {
    id: 'METODOS_PAGO_ALTERNATIVOS',
    question: '¬øAceptan PayPal o crypto para pagar?',
    answer_md: `APEX tiene **m√©todos de pago limitados**:

‚úÖ **M√©todos aceptados**:
- Tarjetas de cr√©dito/d√©bito (Visa, MasterCard)
- Wire transfer (transferencia bancaria)
- Algunos procesadores locales seg√∫n pa√≠s

‚ùå **NO aceptan**:
- PayPal
- Criptomonedas (Bitcoin, USDT, etc.)
- Skrill, Neteller, u otros e-wallets

üí° **Alternativas para Latinoam√©rica**:
- Usa tarjetas internacionales (Visa/MC)
- Considera tarjetas virtuales (Wise, Payoneer)
- Wire transfer para montos grandes

‚ö†Ô∏è Los pagos son procesados de forma segura por su procesador oficial.`,
    answer_short_md: 'NO aceptan PayPal ni crypto. Solo tarjetas Visa/MC y wire transfer.',
    aliases: ['paypal', 'crypto', 'bitcoin', 'metodos pago', 'usdt', 'criptomonedas', 'formas de pago']
  },
  {
    id: 'LIMITE_TRADES_DIARIO',
    question: '¬øHay un l√≠mite m√°ximo de trades por d√≠a?',
    answer_md: `APEX tiene un **l√≠mite suave** de trades diarios:

üìä **L√≠mite recomendado**:
- M√°ximo sugerido: **200 trades/d√≠a**
- Promedio saludable: 20-50 trades/d√≠a

‚ö†Ô∏è **Qu√© pasa si excedes 200 trades**:
- Una vez: Sin problema
- Ocasionalmente: Aceptable
- Consistentemente: Revisi√≥n de cuenta
- Puede considerarse HFT prohibido

‚úÖ **Sin l√≠mites para**:
- Day trading normal (10-50 trades)
- Scalping moderado (50-150 trades)
- Swing trading (1-10 trades)

üö´ **Evita**:
- Trading algor√≠tmico excesivo
- Tick scalping agresivo
- Bots descontrolados

üí° Calidad > Cantidad. Enf√≥cate en trades rentables, no en volumen.`,
    answer_short_md: 'L√≠mite suave de 200 trades/d√≠a. Excederlo consistentemente puede considerarse HFT prohibido.',
    aliases: ['limite trades', 'maximo trades dia', 'cuantos trades', 'trades por dia', 'limite diario']
  }
];

async function createFAQs() {
  console.log('üìù Creando 5 FAQs cr√≠ticas para APEX\n');
  console.log('=' .repeat(60));
  
  let created = 0;
  let failed = 0;
  
  for (const faq of criticalFAQs) {
    console.log(`\n[${faq.id}] "${faq.question}"`);
    
    try {
      // Verificar si ya existe
      const { data: existing } = await supabase
        .from('faqs')
        .select('id')
        .eq('question', faq.question)
        .eq('firm_id', APEX_FIRM_ID)
        .single();
      
      if (existing) {
        console.log('  ‚ö†Ô∏è  Ya existe, actualizando...');
        
        // Actualizar
        const { error } = await supabase
          .from('faqs')
          .update({
            answer_md: faq.answer_md,
            answer_short_md: faq.answer_short_md,
            aliases: faq.aliases
          })
          .eq('id', existing.id);
        
        if (error) {
          console.log(`  ‚ùå Error actualizando: ${error.message}`);
          failed++;
        } else {
          console.log('  ‚úÖ Actualizada exitosamente');
          created++;
        }
      } else {
        // Crear nueva
        const newFaq = {
          id: uuidv4(),
          firm_id: APEX_FIRM_ID,
          slug: faq.question.toLowerCase().replace(/[^a-z0-9]+/g, '-').substring(0, 50),
          question: faq.question,
          answer_md: faq.answer_md,
          answer_short_md: faq.answer_short_md,
          lang: 'es',
          effective_from: new Date().toISOString().split('T')[0],
          source_url: 'https://apextraderco.com',
          aliases: faq.aliases
        };
        
        const { error } = await supabase
          .from('faqs')
          .insert(newFaq);
        
        if (error) {
          console.log(`  ‚ùå Error creando: ${error.message}`);
          failed++;
        } else {
          console.log(`  ‚úÖ Creada con ID: ${newFaq.id}`);
          created++;
          
          // Actualizar PIN si corresponde
          if (faq.id !== faq.id.toLowerCase()) {
            console.log(`  üìå Recuerda actualizar PIN ${faq.id} ‚Üí ${newFaq.id}`);
          }
        }
      }
    } catch (error) {
      console.log(`  ‚ùå Error: ${error.message}`);
      failed++;
    }
  }
  
  console.log('\n' + '=' .repeat(60));
  console.log('üìä RESULTADO');
  console.log('=' .repeat(60));
  console.log(`‚úÖ FAQs creadas/actualizadas: ${created}`);
  console.log(`‚ùå Errores: ${failed}`);
  console.log('\nüí° Nota: Actualiza los PINs con los IDs reales de las FAQs creadas');
  
  return { created, failed };
}

// Ejecutar
if (require.main === module) {
  createFAQs()
    .then(result => {
      console.log('\n‚úÖ Proceso completado\n');
      process.exit(result.failed > 0 ? 1 : 0);
    })
    .catch(error => {
      console.error('‚ùå Error fatal:', error);
      process.exit(1);
    });
}

module.exports = { createFAQs };